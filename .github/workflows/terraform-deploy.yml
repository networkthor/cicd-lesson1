name: Terraform deploy

run-name: Terraform deploying ${{ inputs.MODULE_NAME }} module to ${{ inputs.ENV_NAME }} environment

permissions:
  id-token: write
  contents: read
  issues: write

on: 
    # push:
    #   # branches:
    #   #   - 'dev-**'
    #   paths:
    #     - 'infra/**'
    workflow_dispatch:
      inputs:
        ENV_NAME:
          description: Environment to deploy
          type: choice
          required: true
          default: dev
          options:
          - dev
          - staging
          - production
        MODULE_NAME:
          description: Module to deploy
          type: choice
          required: true
          options:
          - network
          - alb
          - asg
        AWS_REGION:
          description: Region to deploy
          type: choice
          required: true
          default: eu-west-1
          options:
          - eu-west-1
          - us-east-1

        



env:
    BUILD_NUMBER: ${{  github.run_number }}

jobs: 
    deploy-to-env:
      runs-on: ubuntu-latest
      defaults:
        run:
          shell: bash
          working-directory: infra/terraform/environments/${{ inputs.ENV_NAME }}/${{ inputs.AWS_REGION }}/${{ inputs.MODULE_NAME }}
      steps:
      - name: clone repo
        uses: actions/checkout@v4
      
      - name: install terraform binary
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.5"

      - name: login to aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: setup ssh
        uses: MrSquaare/ssh-setup-action@v3
        with:
          host: github.com
          private-key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}
    
      - name: terraform init
        run: |
          terraform init

      - name: terraform validate
        run: |
          terraform validate
      
      - name: terraform plan
        run: |
          terraform plan -out=saved_plan
      
      - name: plan summary
        id: plan_summary
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "TG_PLAN<<$EOF" >> "$GITHUB_ENV"
          echo '```' >> "$GITHUB_ENV"
          terraform show saved_plan -no-color >> "$GITHUB_ENV"
          echo '```' >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          
      - name: create issue for manual approval when deploying to STG/PROD
        if: ${{ inputs.ENV_NAME == 'staging' }}
        uses: trstringer/manual-approval@v1.9.0
        with:
          secret: ${{ github.TOKEN }}
          approvers: networkthor
          minimum-approvals: 1
          issue-title: "deploying ${{ inputs.MODULE_NAME }} module to ${{ inputs.ENV_NAME }} on ${{ inputs.AWS_REGION }}"
          issue-body: ${{ env.TG_PLAN }}
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''
      
      - name: terraform apply
        run: |
          terraform apply -auto-approve saved_plan


